// Code generated by protoc-gen-go. DO NOT EDIT.
// source: studytrack.proto

package studytrack

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateStudentRequest struct {
	Student              *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStudentRequest) Reset()         { *m = CreateStudentRequest{} }
func (m *CreateStudentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStudentRequest) ProtoMessage()    {}
func (*CreateStudentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{0}
}

func (m *CreateStudentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStudentRequest.Unmarshal(m, b)
}
func (m *CreateStudentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStudentRequest.Marshal(b, m, deterministic)
}
func (m *CreateStudentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStudentRequest.Merge(m, src)
}
func (m *CreateStudentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateStudentRequest.Size(m)
}
func (m *CreateStudentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStudentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStudentRequest proto.InternalMessageInfo

func (m *CreateStudentRequest) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

type GetStudentRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStudentRequest) Reset()         { *m = GetStudentRequest{} }
func (m *GetStudentRequest) String() string { return proto.CompactTextString(m) }
func (*GetStudentRequest) ProtoMessage()    {}
func (*GetStudentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{1}
}

func (m *GetStudentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStudentRequest.Unmarshal(m, b)
}
func (m *GetStudentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStudentRequest.Marshal(b, m, deterministic)
}
func (m *GetStudentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudentRequest.Merge(m, src)
}
func (m *GetStudentRequest) XXX_Size() int {
	return xxx_messageInfo_GetStudentRequest.Size(m)
}
func (m *GetStudentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudentRequest proto.InternalMessageInfo

func (m *GetStudentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateSubjectRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Subject              *Subject `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubjectRequest) Reset()         { *m = CreateSubjectRequest{} }
func (m *CreateSubjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubjectRequest) ProtoMessage()    {}
func (*CreateSubjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{2}
}

func (m *CreateSubjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubjectRequest.Unmarshal(m, b)
}
func (m *CreateSubjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubjectRequest.Merge(m, src)
}
func (m *CreateSubjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubjectRequest.Size(m)
}
func (m *CreateSubjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubjectRequest proto.InternalMessageInfo

func (m *CreateSubjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSubjectRequest) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type CreateThemeRequest struct {
	Theme                *Theme   `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	Parent               string   `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateThemeRequest) Reset()         { *m = CreateThemeRequest{} }
func (m *CreateThemeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateThemeRequest) ProtoMessage()    {}
func (*CreateThemeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{3}
}

func (m *CreateThemeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateThemeRequest.Unmarshal(m, b)
}
func (m *CreateThemeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateThemeRequest.Marshal(b, m, deterministic)
}
func (m *CreateThemeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateThemeRequest.Merge(m, src)
}
func (m *CreateThemeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateThemeRequest.Size(m)
}
func (m *CreateThemeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateThemeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateThemeRequest proto.InternalMessageInfo

func (m *CreateThemeRequest) GetTheme() *Theme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CreateThemeRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type ListThemesRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListThemesRequest) Reset()         { *m = ListThemesRequest{} }
func (m *ListThemesRequest) String() string { return proto.CompactTextString(m) }
func (*ListThemesRequest) ProtoMessage()    {}
func (*ListThemesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{4}
}

func (m *ListThemesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListThemesRequest.Unmarshal(m, b)
}
func (m *ListThemesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListThemesRequest.Marshal(b, m, deterministic)
}
func (m *ListThemesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListThemesRequest.Merge(m, src)
}
func (m *ListThemesRequest) XXX_Size() int {
	return xxx_messageInfo_ListThemesRequest.Size(m)
}
func (m *ListThemesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListThemesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListThemesRequest proto.InternalMessageInfo

func (m *ListThemesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListThemesResponse struct {
	Themes               []*Theme `protobuf:"bytes,1,rep,name=themes,proto3" json:"themes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListThemesResponse) Reset()         { *m = ListThemesResponse{} }
func (m *ListThemesResponse) String() string { return proto.CompactTextString(m) }
func (*ListThemesResponse) ProtoMessage()    {}
func (*ListThemesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_06b3e258921f26d8, []int{5}
}

func (m *ListThemesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListThemesResponse.Unmarshal(m, b)
}
func (m *ListThemesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListThemesResponse.Marshal(b, m, deterministic)
}
func (m *ListThemesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListThemesResponse.Merge(m, src)
}
func (m *ListThemesResponse) XXX_Size() int {
	return xxx_messageInfo_ListThemesResponse.Size(m)
}
func (m *ListThemesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListThemesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListThemesResponse proto.InternalMessageInfo

func (m *ListThemesResponse) GetThemes() []*Theme {
	if m != nil {
		return m.Themes
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateStudentRequest)(nil), "studytrack.CreateStudentRequest")
	proto.RegisterType((*GetStudentRequest)(nil), "studytrack.GetStudentRequest")
	proto.RegisterType((*CreateSubjectRequest)(nil), "studytrack.CreateSubjectRequest")
	proto.RegisterType((*CreateThemeRequest)(nil), "studytrack.CreateThemeRequest")
	proto.RegisterType((*ListThemesRequest)(nil), "studytrack.ListThemesRequest")
	proto.RegisterType((*ListThemesResponse)(nil), "studytrack.ListThemesResponse")
}

func init() { proto.RegisterFile("studytrack.proto", fileDescriptor_06b3e258921f26d8) }

var fileDescriptor_06b3e258921f26d8 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xdf, 0x6a, 0xd4, 0x40,
	0x14, 0xc6, 0x49, 0xb4, 0x5b, 0x3c, 0x55, 0xb4, 0xc7, 0x7f, 0x4b, 0x68, 0xc3, 0x32, 0x08, 0xd1,
	0x42, 0x3b, 0x18, 0x6f, 0x64, 0x41, 0xbc, 0x28, 0xe2, 0x4d, 0xaf, 0xaa, 0x5e, 0x78, 0x25, 0xd3,
	0xed, 0xa1, 0xae, 0xb6, 0x99, 0x34, 0x67, 0x22, 0x88, 0x2c, 0x88, 0xaf, 0xe0, 0x83, 0x79, 0xe1,
	0x2b, 0xf8, 0x00, 0x3e, 0x82, 0x64, 0x66, 0xb2, 0x3b, 0x6b, 0xd2, 0xdc, 0x65, 0x66, 0xbe, 0x7c,
	0xdf, 0x39, 0xf3, 0x3b, 0x03, 0x77, 0xd8, 0xd4, 0xa7, 0x5f, 0x4d, 0xa5, 0x66, 0x9f, 0x0f, 0xca,
	0x4a, 0x1b, 0x8d, 0xb0, 0xda, 0x49, 0x76, 0xce, 0xb4, 0x3e, 0x3b, 0x27, 0xa9, 0xca, 0xb9, 0x54,
	0x45, 0xa1, 0x8d, 0x32, 0x73, 0x5d, 0xb0, 0x53, 0x26, 0xb7, 0x2b, 0x62, 0x5d, 0x57, 0x33, 0xf2,
	0x1b, 0xe2, 0x15, 0xdc, 0x3b, 0xac, 0x48, 0x19, 0x7a, 0x63, 0xea, 0x53, 0x2a, 0xcc, 0x31, 0x5d,
	0xd6, 0xc4, 0x06, 0xf7, 0x61, 0x93, 0xdd, 0xce, 0x38, 0x9a, 0x44, 0x8f, 0xb7, 0xf2, 0xbb, 0x07,
	0x41, 0x6c, 0x2b, 0x6e, 0x35, 0x22, 0x83, 0xed, 0xd7, 0x64, 0xfe, 0xf3, 0x40, 0xb8, 0x5e, 0xa8,
	0x0b, 0xb2, 0x06, 0x37, 0x8e, 0xed, 0xb7, 0x78, 0xbf, 0xcc, 0xab, 0x4f, 0x3e, 0xd1, 0x6c, 0x48,
	0x6b, 0x6b, 0x70, 0xaa, 0x71, 0xdc, 0x53, 0x83, 0x37, 0x68, 0x35, 0xe2, 0x1d, 0xa0, 0xb3, 0x7e,
	0xfb, 0x91, 0x2e, 0xa8, 0x35, 0xce, 0x60, 0xc3, 0x34, 0x6b, 0xdf, 0xc6, 0x76, 0x68, 0xe1, 0x84,
	0xee, 0x1c, 0x1f, 0xc0, 0xa8, 0x54, 0x55, 0xd3, 0x70, 0x6c, 0x6b, 0xf0, 0xab, 0xa6, 0xb5, 0xa3,
	0x39, 0x1b, 0xab, 0xe5, 0xa1, 0xd6, 0x5e, 0x02, 0x86, 0x42, 0x2e, 0x75, 0xc1, 0x84, 0x4f, 0x60,
	0x64, 0xfd, 0x79, 0x1c, 0x4d, 0xae, 0xf5, 0x17, 0xe0, 0x05, 0xf9, 0xaf, 0x08, 0x36, 0x0e, 0xcf,
	0x15, 0x33, 0x12, 0xdc, 0x5a, 0xa3, 0x82, 0x93, 0xf0, 0xaf, 0x3e, 0x60, 0x49, 0x1f, 0x1f, 0xb1,
	0xfb, 0xe3, 0xf7, 0x9f, 0x9f, 0xf1, 0x43, 0x71, 0x53, 0x7e, 0x79, 0x2a, 0x3d, 0x2b, 0x9e, 0xb6,
	0xd4, 0xf0, 0x03, 0xc0, 0x8a, 0x1a, 0xee, 0x86, 0x0e, 0x1d, 0x9a, 0x83, 0x01, 0x78, 0xbf, 0x09,
	0xf8, 0xd6, 0x5c, 0xc3, 0x8b, 0x36, 0x46, 0xee, 0x2d, 0xf2, 0xbf, 0x31, 0x6c, 0x1e, 0x11, 0xb3,
	0x2e, 0x18, 0x35, 0x6c, 0x05, 0x78, 0x30, 0xed, 0x76, 0x14, 0x72, 0x4b, 0xba, 0xf7, 0x24, 0xf6,
	0x6d, 0x58, 0x26, 0x52, 0x1b, 0xe6, 0xf0, 0x84, 0x71, 0xd2, 0xdd, 0xe3, 0xd4, 0x03, 0xbd, 0x04,
	0x58, 0xf1, 0x58, 0xef, 0xae, 0x03, 0x34, 0x49, 0xaf, 0x3a, 0x76, 0x18, 0xc5, 0x23, 0x9b, 0x9d,
	0xe2, 0x4e, 0x5f, 0xa3, 0x3e, 0x78, 0x81, 0xdf, 0xa3, 0x25, 0x38, 0x37, 0x94, 0xbd, 0xe0, 0xd6,
	0x26, 0x3f, 0xe9, 0x1b, 0x6a, 0xf1, 0xdc, 0xc6, 0xe5, 0x22, 0x1b, 0x88, 0x93, 0x7b, 0xd2, 0x8f,
	0x3e, 0x2f, 0xa6, 0xed, 0x2b, 0x38, 0x19, 0xd9, 0x77, 0xfd, 0xec, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x16, 0x7a, 0x4c, 0xd4, 0x26, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClassClient is the client API for Class service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClassClient interface {
	CreateStudent(ctx context.Context, in *CreateStudentRequest, opts ...grpc.CallOption) (*Student, error)
	GetStudent(ctx context.Context, in *GetStudentRequest, opts ...grpc.CallOption) (*Student, error)
}

type classClient struct {
	cc *grpc.ClientConn
}

func NewClassClient(cc *grpc.ClientConn) ClassClient {
	return &classClient{cc}
}

func (c *classClient) CreateStudent(ctx context.Context, in *CreateStudentRequest, opts ...grpc.CallOption) (*Student, error) {
	out := new(Student)
	err := c.cc.Invoke(ctx, "/studytrack.Class/CreateStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) GetStudent(ctx context.Context, in *GetStudentRequest, opts ...grpc.CallOption) (*Student, error) {
	out := new(Student)
	err := c.cc.Invoke(ctx, "/studytrack.Class/GetStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClassServer is the server API for Class service.
type ClassServer interface {
	CreateStudent(context.Context, *CreateStudentRequest) (*Student, error)
	GetStudent(context.Context, *GetStudentRequest) (*Student, error)
}

// UnimplementedClassServer can be embedded to have forward compatible implementations.
type UnimplementedClassServer struct {
}

func (*UnimplementedClassServer) CreateStudent(ctx context.Context, req *CreateStudentRequest) (*Student, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStudent not implemented")
}
func (*UnimplementedClassServer) GetStudent(ctx context.Context, req *GetStudentRequest) (*Student, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudent not implemented")
}

func RegisterClassServer(s *grpc.Server, srv ClassServer) {
	s.RegisterService(&_Class_serviceDesc, srv)
}

func _Class_CreateStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).CreateStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studytrack.Class/CreateStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).CreateStudent(ctx, req.(*CreateStudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_GetStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).GetStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studytrack.Class/GetStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).GetStudent(ctx, req.(*GetStudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Class_serviceDesc = grpc.ServiceDesc{
	ServiceName: "studytrack.Class",
	HandlerType: (*ClassServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStudent",
			Handler:    _Class_CreateStudent_Handler,
		},
		{
			MethodName: "GetStudent",
			Handler:    _Class_GetStudent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "studytrack.proto",
}

// LessonsClient is the client API for Lessons service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LessonsClient interface {
	CreateTheme(ctx context.Context, in *CreateThemeRequest, opts ...grpc.CallOption) (*Theme, error)
	ListThemes(ctx context.Context, in *ListThemesRequest, opts ...grpc.CallOption) (*ListThemesResponse, error)
	CreateSubject(ctx context.Context, in *CreateSubjectRequest, opts ...grpc.CallOption) (*Subject, error)
}

type lessonsClient struct {
	cc *grpc.ClientConn
}

func NewLessonsClient(cc *grpc.ClientConn) LessonsClient {
	return &lessonsClient{cc}
}

func (c *lessonsClient) CreateTheme(ctx context.Context, in *CreateThemeRequest, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/studytrack.Lessons/CreateTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lessonsClient) ListThemes(ctx context.Context, in *ListThemesRequest, opts ...grpc.CallOption) (*ListThemesResponse, error) {
	out := new(ListThemesResponse)
	err := c.cc.Invoke(ctx, "/studytrack.Lessons/ListThemes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lessonsClient) CreateSubject(ctx context.Context, in *CreateSubjectRequest, opts ...grpc.CallOption) (*Subject, error) {
	out := new(Subject)
	err := c.cc.Invoke(ctx, "/studytrack.Lessons/CreateSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LessonsServer is the server API for Lessons service.
type LessonsServer interface {
	CreateTheme(context.Context, *CreateThemeRequest) (*Theme, error)
	ListThemes(context.Context, *ListThemesRequest) (*ListThemesResponse, error)
	CreateSubject(context.Context, *CreateSubjectRequest) (*Subject, error)
}

// UnimplementedLessonsServer can be embedded to have forward compatible implementations.
type UnimplementedLessonsServer struct {
}

func (*UnimplementedLessonsServer) CreateTheme(ctx context.Context, req *CreateThemeRequest) (*Theme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTheme not implemented")
}
func (*UnimplementedLessonsServer) ListThemes(ctx context.Context, req *ListThemesRequest) (*ListThemesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListThemes not implemented")
}
func (*UnimplementedLessonsServer) CreateSubject(ctx context.Context, req *CreateSubjectRequest) (*Subject, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubject not implemented")
}

func RegisterLessonsServer(s *grpc.Server, srv LessonsServer) {
	s.RegisterService(&_Lessons_serviceDesc, srv)
}

func _Lessons_CreateTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateThemeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LessonsServer).CreateTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studytrack.Lessons/CreateTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LessonsServer).CreateTheme(ctx, req.(*CreateThemeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lessons_ListThemes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListThemesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LessonsServer).ListThemes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studytrack.Lessons/ListThemes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LessonsServer).ListThemes(ctx, req.(*ListThemesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lessons_CreateSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LessonsServer).CreateSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studytrack.Lessons/CreateSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LessonsServer).CreateSubject(ctx, req.(*CreateSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lessons_serviceDesc = grpc.ServiceDesc{
	ServiceName: "studytrack.Lessons",
	HandlerType: (*LessonsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTheme",
			Handler:    _Lessons_CreateTheme_Handler,
		},
		{
			MethodName: "ListThemes",
			Handler:    _Lessons_ListThemes_Handler,
		},
		{
			MethodName: "CreateSubject",
			Handler:    _Lessons_CreateSubject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "studytrack.proto",
}
